{"version":3,"sources":["../../src/model/MockModuleConfig.js"],"names":["_","require","gConfig","MockModuleConfig","mockModuleName","config","name","description","priority","delay","query","merge","TARGET_FIELD","module","exports"],"mappings":";;;;;;AAAA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;;AAEA,IAAMC,UAAUD,QAAQ,WAAR,CAAhB;;IAEME,gB;AACJ;;;;;;;;;;;AAWA,0BAAYC,cAAZ,EAAyC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AACvC;AACA,OAAKC,IAAL,GAAYF,cAAZ;;AAEA;AACA,OAAKG,WAAL,GAAmBF,OAAOE,WAAP,IAAsB,KAAKD,IAA9C;;AAEA;AACA,OAAKE,QAAL,GAAgBH,OAAOG,QAAP,IAAmB,CAAnC;;AAEA;AACA;AACA,OAAKC,KAAL,GAAaJ,OAAOI,KAAP,IAAgB,CAA7B;;AAEA;AACA;AACA;AACA,OAAKC,KAAL,GAAaV,EAAEW,KAAF,CAAQ,EAAR,EAAYN,OAAOK,KAAnB,sBACVR,QAAQU,YADE,EACaR,cADb,EAAb;AAGD,C;;AAGHS,OAAOC,OAAP,GAAiBX,gBAAjB","file":"MockModuleConfig.js","sourcesContent":["const _ = require('lodash');\n\nconst gConfig = require('../config');\n\nclass MockModuleConfig {\n  /**\n   * 构造函数\n   *\n   * @param {String} mockModuleName 名字\n   * @param {Object} [config] config.json 中的值，注意 config.json 不一定存在\n   * @param {String} [config.name] 名字\n   * @param {String} [config.description] 简要描述\n   * @param {Number} [config.priority] 管理后台列表中排序的权重，值越大则越排在前面\n   * @param {Number} [config.delay] 延时返回的时间，单位 ms\n   * @param {Object} [config.query] 标记\n   */\n  constructor(mockModuleName, config = {}) {\n    // 名字，注意名字不能够再被修改，即忽略 config.name\n    this.name = mockModuleName;\n\n    // 简要描述\n    this.description = config.description || this.name;\n\n    // 管理后台列表中排序的权重，值越大则越排在前面\n    this.priority = config.priority || 0;\n\n    // 延时多久返回，如果是 0，则不做延时返回，单位为 ms\n    // 可以用来模拟 CGI 返回比较慢的场景\n    this.delay = config.delay || 0;\n\n    // 请求中需要携带的额外数据，必须同时满足这个的条件，才算匹配了这个 mock module\n    // 换言之，这里可以定义这个 mock module 的唯一标记（类似ID的概念），\n    // 满足了这个标记则命中了这个 mock module\n    this.query = _.merge({}, config.query, {\n      [gConfig.TARGET_FIELD]: mockModuleName\n    });\n  }\n}\n\nmodule.exports = MockModuleConfig;"]}