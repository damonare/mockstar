{"version":3,"sources":["../src/util.js"],"names":["path","require","urlHandle","MATMAN_QUERY_KEY","MatmanQueryItem","getMatmanQueryItemsFromReferer","referer","paramsFromReferer","JSON","parse","query","e","getMatmanQueryItem","name","matmanQueryItemsFromReferer","result","i","length","matmanQueryItem","isMe","getMockServerBasePath","rootPath","mockServerPath","isAbsolute","resolve","getMockServerBuildPath","buildPath","module","exports"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;;eAE6BA,QAAQ,UAAR,C;IAArBE,gB,YAAAA,gB;;AACR,IAAMC,kBAAkBH,QAAQ,yBAAR,CAAxB;;AAEA;;;;;;AAMA,SAASI,8BAAT,CAAwCC,OAAxC,EAAiD;AAC/C,MAAIC,0BAAJ;;AAEA,MAAI;AACFA,wBAAoBC,KAAKC,KAAL,CAAWP,UAAUQ,KAAV,CAAgBP,gBAAhB,EAAkCG,OAAlC,CAAX,KAA0D,EAA9E;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACVJ,wBAAoB,EAApB;AACD;;AAED,SAAOA,iBAAP;AACD;;AAED;;;;;;;AAOA,SAASK,kBAAT,CAA4BN,OAA5B,EAAqCO,IAArC,EAA2C;AACzC,MAAIC,8BAA8BT,+BAA+BC,OAA/B,CAAlC;;AAEA,MAAIS,SAAS,IAAb;;AAEA;AACA,OAAK,IAAIC,IAAI,CAAR,EAAWC,SAASH,4BAA4BG,MAArD,EAA6DD,IAAIC,MAAjE,EAAyED,GAAzE,EAA8E;AAC5E,QAAIE,kBAAkB,IAAId,eAAJ,CAAoBU,4BAA4BE,CAA5B,CAApB,CAAtB;AACA,QAAIE,gBAAgBC,IAAhB,CAAqBN,IAArB,CAAJ,EAAgC;AAC9BE,eAASG,eAAT;AACA;AACD;AACF;;AAED,SAAOH,MAAP;AACD;;AAED;;;;;;;AAOA,SAASK,qBAAT,CAA+BC,QAA/B,EAAyCC,cAAzC,EAAyD;AACvD,MAAIP,SAASO,kBAAkB,eAA/B;;AAEA,MAAI,CAACtB,KAAKuB,UAAL,CAAgBR,MAAhB,CAAL,EAA8B;AAC5BA,aAASf,KAAKwB,OAAL,CAAaH,QAAb,EAAuBN,MAAvB,CAAT;AACD;;AAED,SAAOA,MAAP;AACD;;AAED;;;;;;AAMA,SAASU,sBAAT,CAAgCJ,QAAhC,EAA0CK,SAA1C,EAAqD;AACnD,MAAIX,SAASW,aAAa,SAA1B;;AAEA,MAAI,CAAC1B,KAAKuB,UAAL,CAAgBR,MAAhB,CAAL,EAA8B;AAC5BA,aAASf,KAAKwB,OAAL,CAAaH,QAAb,EAAuBN,MAAvB,CAAT;AACD;;AAED,SAAOA,MAAP;AACD;;AAEDY,OAAOC,OAAP,GAAiB;AACfvB,kCAAgCA,8BADjB;AAEfO,sBAAoBA,kBAFL;AAGfQ,yBAAuBA,qBAHR;AAIfK,0BAAwBA;AAJT,CAAjB","file":"util.js","sourcesContent":["const path = require('path');\nconst urlHandle = require('url-handle');\n\nconst { MATMAN_QUERY_KEY } = require('./config');\nconst MatmanQueryItem = require('./model/MatmanQueryItem');\n\n/**\n * 获得 req.headers.referer 中携带的额外参数列表\n *\n * @param {String} referer req.headers.referer\n * @returns {{_m_name:String,_m_target:String,_m_disable:Number}[]} 结果\n */\nfunction getMatmanQueryItemsFromReferer(referer) {\n  let paramsFromReferer;\n\n  try {\n    paramsFromReferer = JSON.parse(urlHandle.query(MATMAN_QUERY_KEY, referer)) || [];\n  } catch (e) {\n    paramsFromReferer = [];\n  }\n\n  return paramsFromReferer;\n}\n\n/**\n * 获得 req.headers.referer 中指定名字的携带的额外参数\n *\n * @param {String} referer req.headers.referer\n * @param {String} name 指定的 mocker 名字\n * @returns {Item | null}\n */\nfunction getMatmanQueryItem(referer, name) {\n  let matmanQueryItemsFromReferer = getMatmanQueryItemsFromReferer(referer);\n\n  let result = null;\n\n  // 判断该路由的名字是否在referer中\n  for (let i = 0, length = matmanQueryItemsFromReferer.length; i < length; i++) {\n    let matmanQueryItem = new MatmanQueryItem(matmanQueryItemsFromReferer[i]);\n    if (matmanQueryItem.isMe(name)) {\n      result = matmanQueryItem;\n      break;\n    }\n  }\n\n  return result;\n}\n\n/**\n * 获得 mock server 的根目录绝对路径\n *\n * @param {String} rootPath 项目根目录\n * @param {String} mockServerPath\n * @returns {String}\n */\nfunction getMockServerBasePath(rootPath, mockServerPath) {\n  let result = mockServerPath || './mock_server';\n\n  if (!path.isAbsolute(result)) {\n    result = path.resolve(rootPath, result);\n  }\n\n  return result;\n}\n\n/**\n * 获得 mock server 的构建之后的根目录绝对路径\n * @param {String} rootPath 项目根目录\n * @param {String} buildPath\n * @returns {String}\n */\nfunction getMockServerBuildPath(rootPath, buildPath) {\n  let result = buildPath || './build';\n\n  if (!path.isAbsolute(result)) {\n    result = path.resolve(rootPath, result);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  getMatmanQueryItemsFromReferer: getMatmanQueryItemsFromReferer,\n  getMatmanQueryItem: getMatmanQueryItem,\n  getMockServerBasePath: getMockServerBasePath,\n  getMockServerBuildPath: getMockServerBuildPath\n};"]}