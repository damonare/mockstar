{"version":3,"sources":["../../src/model/MockModule.js"],"names":["MockModuleConfig","require","MockModule","name","module","config","props","getTargetResult","saveTarget","result","Promise","resolve","e","reject","exports"],"mappings":";;;;;;AAAA,IAAMA,mBAAmBC,QAAQ,oBAAR,CAAzB;;IAEMC,U;AACF;;;;;;;AAOA,wBAAYC,IAAZ,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkC;AAAA;;AAC9B,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAc,IAAIL,gBAAJ,CAAqBG,IAArB,EAA2BE,MAA3B,CAAd;AACH;;AAED;;;;;;;;;;oCAMoB;AAAA,8CAAPC,KAAO;AAAPA,qBAAO;AAAA;;AAChB,mBAAOC,kCAAgB,KAAKH,MAArB,SAAgCE,KAAhC,EAAP;AACH;;;;;;AAGL;;;;;;;;;AAOA,SAASC,eAAT,CAAyBC,UAAzB,EAA+C;AAC3C,QAAI;AAAA,2CADgCF,KAChC;AADgCA,iBAChC;AAAA;;AACA,YAAIG,SAAU,OAAOD,UAAP,KAAsB,UAAvB,GAAqCA,4BAAcF,KAAd,CAArC,GAA4DE,UAAzE;AACA,eAAOE,QAAQC,OAAR,CAAgBF,MAAhB,CAAP;AACH,KAHD,CAGE,OAAOG,CAAP,EAAU;AACR,eAAOF,QAAQG,MAAR,CAAeD,CAAf,CAAP;AACH;AACJ;;AAEDR,OAAOU,OAAP,GAAiBZ,UAAjB","file":"MockModule.js","sourcesContent":["const MockModuleConfig = require('./MockModuleConfig');\n\nclass MockModule {\n    /**\n     * 构造函数\n     *\n     * @param {String} name 名字\n     * @param {Object | Function} module require('./index.js')\n     * @param {Object} [config] require('./config.json')，有可能没有，此时则为null\n     */\n    constructor(name, module, config) {\n        this.name = name;\n        this.module = module;\n        this.config = new MockModuleConfig(name, config);\n    }\n\n    /**\n     * 获得该模块的最终结果\n     *\n     * @param {*} props\n     * @returns {Promise}\n     */\n    getResult(...props) {\n        return getTargetResult(this.module, ...props);\n    }\n}\n\n/**\n * 获得模块内容之后，计算出最终返回值\n *\n * @param {*} saveTarget 有可能是函数、对象或者普通字符串\n * @param {*} props saveTarget 为函数时，会透传给它\n * @return {Promise}\n */\nfunction getTargetResult(saveTarget, ...props) {\n    try {\n        let result = (typeof saveTarget === 'function') ? saveTarget(...props) : saveTarget;\n        return Promise.resolve(result);\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nmodule.exports = MockModule;"]}